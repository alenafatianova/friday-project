{"version":3,"sources":["components/Test/superInput.module.css","styles/forgotPassword.module.css","styles/resetPassword.module.css","styles/header.module.css","styles/notFoundPage.module.css","styles/navlink.module.css","styles/login.module.css","api/Login-api.ts","redux/reducers/app-reducer.ts","redux/profile-reducer.ts","redux/login-reducer.ts","components/Login.tsx","api/sign-up-api.ts","redux/reducers/sign-up-reducer.ts","components/SignUp.tsx","components/Profile.tsx","components/Page404.tsx","api/forgot-password-api.ts","redux/reducers/forgot-password-reducer.ts","components/ForgotPassword.tsx","components/ResetPassword.tsx","components/Test/SuperInput.tsx","components/Test/SuperButton.tsx","components/Test/SuperCheckbox.tsx","components/TestPage.tsx","components/Header.tsx","components/Navlink.tsx","components/App.tsx","reportWebVitals.ts","redux/store.ts","index.tsx","styles/signup.module.css"],"names":["module","exports","instance","axios","create","baseURL","withCredentials","authAPI","data","post","delete","initialState","status","error","isInitialized","setAppErrorAC","type","setAppStatusAC","_id","email","name","avatar","publicCardPacksCount","created","updated","isAdmin","verified","rememberMe","setUserAC","isLoggedIn","setIsLoggedInAC","value","Login","dispatch","useDispatch","useSelector","state","login","isStatus","app","useState","emailValue","setEmailValue","passwordValue","setPasswordValue","emailEmpty","setEmailEmpty","passwordEmpty","setPasswordEmpty","rememberMeValue","setRememberMeValue","to","className","styles","mainContainer","loginForm","spanDiv","loginSpan","signupSpan","dataContainer","emailContainer","emailLabel","placeholder","emailInput","onChange","e","currentTarget","onBlur","length","errorCheckStyle","passwordContainer","passwordLabel","passwordInput","rememberMeContainer","rememberMeLabel","rememberMeInput","checked","loadingStatus","failedStatus","buttonContainer","disabled","buttonLogin","onClick","password","a","then","res","catch","response","message","console","log","signUpAPI","alert","addedUser","SIGNUP_DATA","signUp","SignUp","setEmail","emptyEmail","setEmptyEmail","setPassword","emptyPassword","setEmptyPassword","history","useHistory","signUpNahdler","signUpThunk","push","mainSignupContainer","signupForm","signupContainer","buttonSignup","Profile","profile","Page404","container","getLostSpan","mainDiv","forgotPasswordAPI","from","info","resetPasswordToken","initialForgotPasswordState","newPassword","isRequestLoading","SEND_EMAIL","RESET_PASSWORD","IS_REQUEST_LOADING","sendEmailThunk","sendEmail","setNewPasswordThunk","resetPassword","ForgotPassword","React","memo","setEmailInput","inputEmpty","setInputEmpty","loading","forgotPassword","recoverForm","recoverSpan","recoverPasswordContainer","enterEmailSpan","inputStyle","recoverInput","buttonReset","ResetPassword","props","newPasswordInput","setNewPasswordInput","newPasswordEmpty","setnewPasswordEmpty","useParams","useCallback","resetForm","resetSpan","newPasswordContainer","newPasswordLabel","SuperInputText","onChangeText","onKeyPress","onEnter","spanClassName","restProps","finalSpanClassName","s","finalInputClassName","errorInput","superInput","key","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checkboxStyle","TestPage","text","setText","setChecked","showAlert","mainDivTest","SuperInput","Header","linksContainer","signup","Navlink","App","appStyles","navlinkStyle","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","document","getElementById","apiAddress"],"mappings":"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","file":"static/js/main.f441132b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainDivTest\":\"superInput_mainDivTest__-fU4J\",\"superInput\":\"superInput_superInput__1lAzC\",\"errorInput\":\"superInput_errorInput__3yxDK\",\"error\":\"superInput_error__3TQxO\",\"checkbox\":\"superInput_checkbox__2aX1I\",\"checkboxStyle\":\"superInput_checkboxStyle__3U3yE\",\"default\":\"superInput_default__1vHFr\",\"red\":\"superInput_red__3XSHw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"forgotPassword_mainContainer__3nYOT\",\"recoverForm\":\"forgotPassword_recoverForm__10KO6\",\"dataContainer\":\"forgotPassword_dataContainer__1Oy6L\",\"recoverInput\":\"forgotPassword_recoverInput__1vQ4X\",\"recoverPasswordContainer\":\"forgotPassword_recoverPasswordContainer__3eXoj\",\"recoverSpan\":\"forgotPassword_recoverSpan__1F1fe\",\"enterEmailSpan\":\"forgotPassword_enterEmailSpan__f0pvr\",\"buttonContainer\":\"forgotPassword_buttonContainer__2GGB3\",\"buttonReset\":\"forgotPassword_buttonReset__1S5s-\",\"errorCheckStyle\":\"forgotPassword_errorCheckStyle__1LIaI\",\"loadingText\":\"forgotPassword_loadingText__3Uh08\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"resetPassword_mainContainer__2SdOP\",\"resetForm\":\"resetPassword_resetForm__8FN92\",\"dataContainer\":\"resetPassword_dataContainer__Fc64z\",\"newPasswordInput\":\"resetPassword_newPasswordInput__2Ecdl\",\"confirmPasswordInput\":\"resetPassword_confirmPasswordInput__3FirR\",\"newPasswordContainer\":\"resetPassword_newPasswordContainer__3EYNR\",\"confirmPasswordContainer\":\"resetPassword_confirmPasswordContainer__2bfZi\",\"resetSpan\":\"resetPassword_resetSpan__gf0zL\",\"buttonContainer\":\"resetPassword_buttonContainer__1T8sM\",\"buttonReset\":\"resetPassword_buttonReset__25oxW\",\"errorCheckStyle\":\"resetPassword_errorCheckStyle__1Xpt2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainDiv\":\"header_mainDiv__3_Stn\",\"linksContainer\":\"header_linksContainer__2yqN-\",\"login\":\"header_login__YsxWo\",\"signup\":\"header_signup__3pOhg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"notFoundPage_container__3HphT\",\"getLostSpan\":\"notFoundPage_getLostSpan__1MyZx\",\"mainDiv\":\"notFoundPage_mainDiv__1zoVL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainDiv\":\"navlink_mainDiv__3vrzX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"login_mainContainer__1yXrH\",\"loginForm\":\"login_loginForm__X-YfN\",\"dataContainer\":\"login_dataContainer__3UeUz\",\"emailInput\":\"login_emailInput__7bhux\",\"passwordInput\":\"login_passwordInput__1VXsF\",\"emailContainer\":\"login_emailContainer__9Qs1Z\",\"passwordContainer\":\"login_passwordContainer__3C1re\",\"rememberMeContainer\":\"login_rememberMeContainer__2H6cG\",\"spanDiv\":\"login_spanDiv__1T6cl\",\"loginSpan\":\"login_loginSpan__2WeRs\",\"buttonContainer\":\"login_buttonContainer__1VFh7\",\"loadingStatus\":\"login_loadingStatus__jmXPr\",\"failedStatus\":\"login_failedStatus__3ebY0\",\"buttonLogin\":\"login_buttonLogin__1UrB0\",\"errorCheckStyle\":\"login_errorCheckStyle__3LB_X\"};","import axios from 'axios'\n\nconst instance = axios.create({\n    baseURL: 'https://neko-back.herokuapp.com/2.0/',\n    withCredentials: true\n   })\n\n// api\nexport const authAPI  = {\n    login(data: LoginRequestType) {\n        return instance.post<LoginResponseType>('auth/login', data);\n    },\n    PostMe() {\n        return instance.post<LoginResponseType>('auth/me', {});\n    },\n    PutMe( name: string, avatar: string) {\n        return instance.put<{ updatedUser:LoginResponseType, error?: string}>('auth/me', {});\n    },\n    DeleteMe() {\n        return instance.delete<{info: string, error: string}>('auth/me', {});\n    }\n}\n\n// types\n\nexport type LoginRequestType = {\n    email: string\n    password: string\n    rememberMe: boolean\n}\n\nexport type LoginResponseType = {\n   _id: string\n    email: string\n    name: string\n    avatar?: string\n    publicCardPacksCount: number\n    created: string\n    updated: string\n    isAdmin: boolean\n    verified: boolean\n    rememberMe: boolean\n    error?: string\n}\n\n// export type PutMeRequestType = {\n//     name: string\n//     avatar: string\n// }\n//\n// export type PutMeResponseType = {\n//     updatedUser:LoginResponseType\n//     error?: string\n// }","import {Dispatch} from \"redux\";\nimport {authAPI} from \"../../api/Login-api\";\nimport {setIsLoggedInAC} from \"../login-reducer\";\n\n\nconst initialState: InitialStateType = {\n    status: 'idle',\n    error: null,\n    isInitialized: false\n}\n\nexport const appReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\n    switch (action.type) {\n        case 'APP/SET-STATUS':\n            return {...state, status: action.status}\n        case 'APP/SET-ERROR':\n            return {...state, error: action.error}\n        case 'APP/SET-INITIALIZED':\n            return {...state, isInitialized: action.isInitialized}\n        default:\n            return {...state}\n    }\n}\n\nexport type RequestStatusType =  'idle' | 'loading' | 'succeeded' | 'failed'\nexport type InitialStateType = {\n    // происходит ли сейчас взаимодействие с сервером\n    status: RequestStatusType\n    // если ошибка какая-то глобальная произойдёт - мы запишем текст ошибки сюда\n    error: string | null\n    isInitialized: boolean\n}\n\nexport const setInitializedAC=(isInitialized: boolean) =>({ type: 'APP/SET-INITIALIZED', isInitialized} as const)\nexport const setAppErrorAC = (error: string | null) => ({ type: 'APP/SET-ERROR', error } as const)\nexport const setAppStatusAC = (status:  RequestStatusType) => ({ type: 'APP/SET-STATUS', status } as const)\n\n\n//tnunk\n\nexport const initializeAppTC = () => (dispatch: Dispatch) => {\n\n    authAPI.PostMe().then(res => {\n      dispatch(setIsLoggedInAC(true));\n\n    }).catch((e)=> {\n       console.log(e)\n    })\n}\n\n\nexport type SetInitializedActionType = ReturnType<typeof setInitializedAC>\nexport type SetAppErrorActionType = ReturnType<typeof setAppErrorAC>\nexport type SetAppStatusActionType = ReturnType<typeof setAppStatusAC>\n\ntype ActionsType =\n    | SetAppErrorActionType\n    | SetAppStatusActionType\n    | SetInitializedActionType\n","import {LoginResponseType} from \"../api/Login-api\";\n\nconst initialState: InitialStateType = {\n\n        _id: '',\n        email: '',\n        name: '',\n        avatar: '',\n        publicCardPacksCount: 0,\n        created: '',\n        updated: '',\n        isAdmin: false,\n        verified: false,\n        rememberMe: false,\n        error: ''\n\n}\n\nexport const profileReducer = (state: InitialStateType = initialState, action: SetUserActionsType): InitialStateType => {\n    switch (action.type) {\n        case 'SET-USER':\n            return {...state,  ...action.data}\n\n        default:\n            return {...state}\n    }\n}\n\n\nexport type InitialStateType = {\n\n        _id: string,\n        email: string,\n        name: string,\n        avatar?: string,\n        publicCardPacksCount: number,\n        created: string,\n        updated: string,\n        isAdmin: boolean,\n        verified: boolean,\n        rememberMe: boolean,\n        error?: string\n\n}\n\nexport const setUserAC = (data: LoginResponseType) => ({type: 'SET-USER', data} as const)\n\n    // types\nexport type SetUserActionsType = ReturnType<typeof setUserAC >\n\n\n","import {Dispatch} from 'redux'\nimport {setAppErrorAC, SetAppErrorActionType, setAppStatusAC, SetAppStatusActionType} from \"./reducers/app-reducer\";\nimport {authAPI, LoginRequestType} from \"../api/Login-api\";\nimport {setUserAC, SetUserActionsType} from \"./profile-reducer\";\n\nconst initialState = {\n    isLoggedIn: false\n}\ntype InitialStateType = typeof initialState\n\nexport const loginReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\n    switch (action.type) {\n        case 'login/SET-IS-LOGGED-IN':\n            return {...state, isLoggedIn: action.value}\n        default:\n            return state\n    }\n}\n\n// actions\nexport const setIsLoggedInAC = (value: boolean) =>\n    ({type: 'login/SET-IS-LOGGED-IN', value} as const)\n\n// thunks\nexport const loginTC = (data: LoginRequestType) => async (dispatch: Dispatch<ActionsType>) => {\n\n    dispatch(setAppStatusAC('loading'))\n    await authAPI.login(data).then((res) => {\n        debugger\n        dispatch(setIsLoggedInAC(true))\n        dispatch(setAppStatusAC('succeeded'))\n        dispatch(setUserAC(res.data))\n    })\n        .catch((e) => {\n            const error = e.response ? e.response.data.error : (e.message + ' more details in the console');\n            dispatch(setAppStatusAC('failed'))\n            dispatch(setAppErrorAC(error.message))\n            console.log(error.error)\n        })\n}\n\nexport const logoutTC = () => (dispatch: Dispatch<ActionsType>) => {\n    dispatch(setAppStatusAC('loading'))\n    authAPI.DeleteMe()\n        .then(res => {\n            dispatch(setIsLoggedInAC(false))\n            dispatch(setAppStatusAC('succeeded'))\n        })\n        .catch((e) => {\n            const error = e.response ? e.response.data.error : (e.message + ' more details in the console');\n            dispatch(setAppStatusAC('failed'))\n            dispatch(setAppErrorAC(error.message))\n        })\n}\n\n\n// types\ntype ActionsType = ReturnType<typeof setIsLoggedInAC> | SetAppStatusActionType | SetAppErrorActionType | SetUserActionsType\n\n\n\n","import React, {ChangeEvent, useEffect, useState} from 'react'\nimport styles from '../styles/login.module.css'\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {Redirect} from 'react-router-dom';\nimport {AppRootStateType} from \"../redux/store\";\nimport {loginTC} from \"../redux/login-reducer\";\nimport {RequestStatusType} from \"../redux/reducers/app-reducer\";\n\n\nexport const Login = () => {\n\n    const dispatch = useDispatch()\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.login.isLoggedIn)\n    const isStatus = useSelector<AppRootStateType, RequestStatusType>(state => state.app.status)\n\n    //--проверка email, password forms\n    const [emailValue, setEmailValue] = useState<string>('nya-admin@nya.nya')\n    const [passwordValue, setPasswordValue] = useState<string>('1qazxcvBG')\n    const [emailEmpty, setEmailEmpty] = useState<boolean>(false)\n    const [passwordEmpty, setPasswordEmpty] = useState<boolean>(false)\n    const [rememberMeValue, setRememberMeValue] = useState<boolean>(false)\n    const [dis, setDis] = useState(false)\n\n    // Обработчк кнопки залогиниться\n    const loginHandler = () => {\n        dispatch(loginTC({email: emailValue, password: passwordValue, rememberMe: rememberMeValue}))\n       }\n\n\n    const emailCheck = () => {\n        setEmailEmpty(emailValue.length === 0)\n    }\n    const passwordCheck = () => {\n        setPasswordEmpty(passwordValue.length === 0)\n    }\n\n    const updateEmailValue = (e: ChangeEvent<HTMLInputElement>) => {\n        setEmailValue(e.currentTarget.value)\n    }\n    const updatePasswordValue = (e: ChangeEvent<HTMLInputElement>) => {\n        setPasswordValue(e.currentTarget.value)\n    }\n\n    const updateRememberMeValue = () => {\n        setRememberMeValue(!rememberMeValue)\n    }\n    //\n    // useEffect(() => {\n    //     setTimeout(() => {\n    //         return <Redirect to={'/profile'}/>\n    //     }, 1000)\n    // }, [])\n\n    if (isLoggedIn) {\n\n            return <Redirect to={'/profile'}/>\n\n    }\n    return (\n        <div className={styles.mainContainer}>\n\n            <form className={styles.loginForm}>\n\n                <div className={styles.spanDiv}>\n                    <div className={styles.loginSpan}><span>Login</span></div>\n                    <div className={styles.signupSpan}><span>Sign Up</span></div>\n                </div>\n                <div className={styles.dataContainer}>\n                    <div className={styles.emailContainer}>\n                        <label className={styles.emailLabel}>Email</label>\n                        <div>\n                            <input\n                                type=\"text\"\n                                placeholder='Email'\n                                className={styles.emailInput}\n                                value={emailValue}\n                                onChange={updateEmailValue}\n                                onBlur={emailCheck}\n                            />\n                            {emailEmpty && <div className={styles.errorCheckStyle}>Email is required</div>}\n                        </div>\n                    </div>\n                    <div>\n                        <div className={styles.passwordContainer}>\n                            <label className={styles.passwordLabel}>Password</label>\n                            <div>\n                                <input\n                                    type=\"text\"\n                                    placeholder='Password'\n                                    className={styles.passwordInput}\n                                    value={passwordValue}\n                                    onChange={updatePasswordValue}\n                                    onBlur={passwordCheck}\n                                />\n                                {passwordEmpty && <div className={styles.errorCheckStyle}>Password is required</div>}\n                            </div>\n                        </div>\n                    </div>\n                    <div className={styles.rememberMeContainer}>\n                        <label className={styles.rememberMeLabel}>Remember me</label>\n                        <div>\n                            <input\n                                type=\"checkbox\"\n                                className={styles.rememberMeInput}\n                                checked={rememberMeValue}\n                                onChange={updateRememberMeValue}\n                            />\n                        </div>\n                    </div>\n                </div>\n                <div>\n                    {/*<div className={styles.loadingStatus} aria-disabled={dis}>{isStatus === 'succeeded' ?*/}\n                    {/*    <div>Success!</div> : ''}</div>*/}\n                    <div className={styles.loadingStatus}>{isStatus === 'loading' ? <div>Loading...</div> : ''}</div>\n                    <div className={styles.failedStatus}>{isStatus === 'failed' ?\n                        <div>Not valid email or password</div> : ''}</div>\n                </div>\n                <div className={styles.buttonContainer}>\n                    <button disabled={isStatus === 'loading'} className={styles.buttonLogin} onClick={loginHandler}> Log\n                        In\n                    </button>\n                </div>\n\n\n            </form>\n\n        </div>\n    )\n}\n","\nimport axios from 'axios'\nimport { useHistory} from 'react-router'\n\n// const instance = axios.create({\n//     baseURL: 'http://localhost:7542/2.0/',\n//     withCredentials: true\n// })\n\nexport const instance = axios.create({\n    baseURL: 'https://neko-back.herokuapp.com/2.0/',\n    withCredentials: true,\n})\n\ntype signUpResponseType = {\n    addedUser: {}\n    error: string\n}\n\nexport const signUpAPI = {\n    async signUp(email: string, password: string) {\n        try{\n            const response = await instance.post<signUpResponseType>('auth/register', {email, password})\n            if (response.status === 200) {\n               return alert(response.data.addedUser)\n            }\n        }\n        catch(error) {\n            return alert(error);\n        }\n    }\n\n}","import { signUpAPI } from './../../api/sign-up-api';\nimport { Dispatch } from 'redux'\n\n\nconst initialSignUpState = {\n    email: '',\n    password: ''\n}\n\nconst SIGNUP_DATA = 'SIGNUP_DATA'\n\nexport type signUpPayloadType = {\n    email: string\n    password: string\n}\n\nexport const signUpReducer = (state =  initialSignUpState, action: SignUpActionsType) => {\n    switch(action.type) {\n        case SIGNUP_DATA: {\n            return {\n                ...state, \n                email: action.email,\n                password: action.password\n            }\n        }\n        default: {\n            return state;\n        }\n    }\n}\n\nexport const signUp = (email: string, password: string) => ({type: SIGNUP_DATA, email, password})\n\ntype SignUpActionsType = ReturnType<typeof signUp> \n\nexport const signUpThunk = (email: string, password: string) => async(dispatch: Dispatch) => {\n    signUpAPI.signUp(email, password)\n    dispatch(signUp(email, password))\n}","import React, { ChangeEvent, useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { signUpThunk } from '../redux/reducers/sign-up-reducer'\nimport styles from '../styles/signup.module.css'\n\n\n\nexport const SignUp = () => {\n\n    const [email, setEmail] = useState<string>('')\n    const [emptyEmail, setEmptyEmail] = useState<boolean>(false)\n    const emailValue = (e: ChangeEvent<HTMLInputElement>) => setEmail(e.currentTarget.value)\n    const emailCheck = () => setEmptyEmail(email.length === 0)\n\n    const [password, setPassword] = useState<string>('')\n    const [emptyPassword, setEmptyPassword] = useState<boolean>(false)\n    const passwordValue = (e: ChangeEvent<HTMLInputElement>) => setPassword(e.currentTarget.value)\n    const passwordCheck = () => setEmptyPassword(password.length === 0)\n    \n   const dispatch = useDispatch()\n   const history = useHistory()\n   \n   const signUpNahdler = (email: string, password: string) => {\n       dispatch(signUpThunk(email, password))\n       history.push('/login')\n   }\n    \n    return (\n        <div className={styles.mainSignupContainer}>\n           \n             <form className={styles.signupForm}>\n             <div className={styles.spanDiv}>\n             <span className={styles.loginSpan}>Login</span>\n             <span className={styles.signupSpan}>Sign Up</span>\n             </div>\n             <div className={styles.signupContainer}>\n                <div className={styles.emailContainer}>\n                        <label className={styles.emailLabel}>Email</label>\n                    <div>\n                        <input \n                            type=\"text\" \n                            placeholder='Enter' \n                            className={styles.emailInput} \n                            value={email}\n                            onChange={emailValue}\n                            onBlur={emailCheck}\n                        />\n                        {emptyEmail && <div className={styles.errorCheckStyle}>Email is required</div>}\n                    </div>\n                </div>\n                <div>\n                    <div className={styles.passwordContainer}>\n                            <label className={styles.passwordLabel}>Password</label>\n                        <div>\n                            <input \n                                type=\"password\" \n                                placeholder='Enter' \n                                className={styles.passwordInput} \n                                value={password}\n                                onChange={passwordValue}\n                                onBlur={passwordCheck}\n                            />\n                        {emptyPassword && <div className={styles.errorCheckStyle}>Password is required</div>}\n                        </div>\n                    </div>\n                </div>\n             </div>\n                <div className={styles.buttonContainer}>\n                    <button \n                        className={styles.buttonSignup}\n                        onClick={() => signUpNahdler(email, password)}\n                        > Sign Up</button>\n                </div>\n             </form>\n        </div>\n    )\n}\n","import React from 'react'\nimport {useSelector} from \"react-redux\";\nimport {AppRootStateType} from \"../redux/store\";\nimport {Redirect} from \"react-router-dom\";\n\nexport const Profile = () => {\n\n    const {email, name, avatar, publicCardPacksCount} = useSelector<AppRootStateType, any>(state => state.profile)\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.login.isLoggedIn)\n\n\n    if (!isLoggedIn) {\n        return <Redirect to={'/login'}/>\n    }\n    return (\n        <div>\n            <div>Email: {email}</div>\n            <div> Name: {name}</div>\n            <div>Avatar: {avatar}</div>\n            <div>PublicCardPacksCount: {publicCardPacksCount}</div>\n\n\n        </div>\n    )\n}\n","import React from 'react'\nimport styles from '../styles/notFoundPage.module.css'\n\nexport const Page404 = () => {\n    return (\n      <div className={styles.container}>\n            <span className={styles.getLostSpan}>Oops... You get lost</span>\n            <div className={styles.mainDiv}></div>\n        </div>\n    )\n}\n","import { useHistory } from 'react-router';\nimport axios from 'axios'\n\nexport const instance = axios.create({\n    baseURL: 'https://neko-back.herokuapp.com/2.0/',\n    withCredentials: true,\n})\n// const instance = axios.create({\n//     baseURL: 'http://localhost:7542/2.0/',\n//     withCredentials: true\n// })\n\ntype forgotPasswordResponseType = {\n    info: string\n    error: string\n}\ntype setNewPasswordResponseType = {\n    info: string\n    error: string\n}\n\nexport const forgotPasswordAPI = {\n    async forgotPassword(email: string, from?: string, message?: string)  {\n        try {\n        const response = await instance.post<forgotPasswordResponseType>(`auth/forgot`, {email, from, message})\n         if (response.status === 200) {\n            return alert(response.data.info)\n         }\n        }\n        catch(error) {\n            return alert(error);\n        }  \n    },\n    async setNewPassword(password: string, resetPasswordToken: string) {\n        try{\n            const response = await instance.post<setNewPasswordResponseType>(`auth/set-new-password/`, {password, resetPasswordToken})\n            if(response.status === 200) {\n                return alert(response.data.info);\n            } \n        }\n        catch(error) {\n            return alert(error);\n        }\n    }\n}\n","import { forgotPasswordAPI } from '../../api/forgot-password-api';\nimport { Dispatch } from \"redux\";\n\nexport const initialForgotPasswordState: initialForgotPasswordStateType = {\n    email: '',\n    newPassword: '',\n    isRequestLoading: ''\n}\n\nexport type initialForgotPasswordStateType = {\n    email: string\n    newPassword: string\n    isRequestLoading: RequestLoadingType\n}\n\nconst SEND_EMAIL = 'friday-project/forgot-password-reducer/SEND_EMAIL';\nconst RESET_PASSWORD = 'friday-project/forgot-password-reducer/RESET_PASSWORD' \nconst IS_REQUEST_LOADING = 'friday-project/forgot-password-reducer/IS_REQUEST_LOADING'\n\n\nexport const forgotPasswordReducer = (state: initialForgotPasswordStateType = initialForgotPasswordState, action: actionsType) => {\n    switch(action.type) {\n        case SEND_EMAIL: {\n            return {\n                ...state,\n                email: action.email, \n            }\n        }\n        case RESET_PASSWORD: {\n            return {\n                ...state, \n                newPassword: action.newPassword\n            }\n        }\n        case IS_REQUEST_LOADING: {\n            return {\n                ...state,\n                isRequestLoading: action.isRequestLoading\n            }\n        }\n        default: \n            return state;\n    }\n}\n\n\nexport type RequestLoadingType = 'Loading' | 'Succeeded' | ''\n\n\n//--- Action Creators ------\nexport const sendEmail = (email: string) => ({type: SEND_EMAIL, email} as const)\nexport const resetPassword = (newPassword: string) => ({type: RESET_PASSWORD, newPassword} as const)\nexport const isRequestLoading = (isRequestLoading: RequestLoadingType) => ({type: IS_REQUEST_LOADING, isRequestLoading} as const)\n\n\n\n// ------ thunk for dispatching action creator ---------\nexport const sendEmailThunk = (email: string) => (dispatch: Dispatch) => {\n    dispatch(isRequestLoading('Loading'))\n    const from = \"test-front-admin <alyena.fatianova@gmail.com>\"\n    const message = `<div style=\"background-color: lime; padding: 15px\">\n    password recovery link: \n    <a href='http://localhost:3000/#/resetPassword/$token$'>link</a> </div>`\n    forgotPasswordAPI.forgotPassword(email, from, message)\n    dispatch(sendEmail(email))  \n}\n\nexport const setNewPasswordThunk = (newPassword: string, resetPasswordToken: string) => (dispatch: Dispatch) => { \n    forgotPasswordAPI.setNewPassword(newPassword, resetPasswordToken) \n    dispatch(resetPassword(newPassword))\n}\n\n\ntype actionsType =  | ReturnType<typeof sendEmail>\n                    | ReturnType<typeof resetPassword>\n                    | ReturnType<typeof isRequestLoading>\n\n","import React, { ChangeEvent, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { isRequestLoading, RequestLoadingType, sendEmailThunk } from '../redux/reducers/forgot-password-reducer'\nimport { AppRootStateType } from '../redux/store'\nimport styles from '../styles/forgotPassword.module.css'\n\n\n\nexport const ForgotPassword = React.memo(() => {\n    \n    const [emailInput, setEmailInput] = useState<string>('')\n    const emailValue = (e: ChangeEvent<HTMLInputElement>) => setEmailInput(e.currentTarget.value)\n    const [inputEmpty, setInputEmpty] = useState<boolean>(false)\n    const inputCheck = () => setInputEmpty(emailInput.length === 0)\n\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const loading = useSelector<AppRootStateType, RequestLoadingType>(state => state.forgotPassword.isRequestLoading) \n\n    const onSendEmail = (email: string) => {\n        dispatch(sendEmailThunk(email))\n        history.push('/resetPassword')\n    }\n   \n  \n    return (\n        <div className={styles.mainContainer}>\n        <form className={styles.recoverForm}>\n             <div className={styles.recoverSpan}>\n            {loading === 'Loading' ? <div>Loading...</div>  :  <span>Forgot password?</span>}\n                \n                </div>\n             <div className={styles.dataContainer}>\n                 <div className={styles.recoverPasswordContainer}>\n                      <span className={styles.enterEmailSpan}>\n                          Enter you email to receive password\n                      </span>\n                      \n                     <div className={styles.inputStyle}>\n                         <input \n                            type=\"email\" \n                            placeholder='Your email address' \n                            className={styles.recoverInput} \n                            value={emailInput}\n                            onChange={emailValue}\n                            onBlur={inputCheck}\n                         />\n                         {inputEmpty && <div className={styles.errorCheckStyle}>Required</div>}\n                     </div>\n                 </div>\n             </div>\n             <div className={styles.buttonContainer}>\n                <button \n                    className={styles.buttonReset} \n                    disabled={!emailInput}\n                    onClick={() => onSendEmail(emailInput)}\n                    > Send\n                </button>\n             </div> \n        </form>\n </div>\n)\n})\n\n\n","import React, { ChangeEvent, useCallback, useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport {  useParams } from 'react-router-dom'\nimport { setNewPasswordThunk } from '../redux/reducers/forgot-password-reducer'\nimport styles from '../styles/resetPassword.module.css'\n\ntype resetPasswordProps = {\n    isLoggedIn: false\n}\n\nexport const ResetPassword = React.memo((props: resetPasswordProps) => {\n\n    const [newPasswordInput, setNewPasswordInput] = useState<string>('')\n    const [newPasswordEmpty, setnewPasswordEmpty] = useState<boolean>(false)\n    const newPasswordCheck = () => setnewPasswordEmpty(newPasswordInput.length === 0)\n    const passwordValue = (e: ChangeEvent<HTMLInputElement>) => setNewPasswordInput(e.currentTarget.value)\n  \n    const dispatch = useDispatch()\n\n    const {resetPasswordToken} = useParams<{resetPasswordToken: string}>();\n    console.log(resetPasswordToken)\n\n    const setPassword = useCallback((newPassword: string, resetPasswordToken: string) => { \n        dispatch(setNewPasswordThunk(newPassword, resetPasswordToken)) \n    },[])\n\n\n    return (\n        <div className={styles.mainContainer}>\n               <form className={styles.resetForm}>\n                    <div className={styles.resetSpan}><span>Reset Password</span></div>\n                    <div className={styles.dataContainer}>\n                        <div className={styles.newPasswordContainer}>\n                             <label className={styles.newPasswordLabel}>Reset Password</label>\n                            <div>\n                                <input \n                                    type=\"password\" \n                                    placeholder='Enter new password' \n                                    className={styles.newPasswordInput} \n                                    value={newPasswordInput}\n                                    onChange={passwordValue}\n                                    onBlur={newPasswordCheck}\n                                />\n                                {newPasswordEmpty && <div className={styles.errorCheckStyle}>Required</div>} \n                            </div>\n                        </div>\n                    </div>\n                    <div className={styles.buttonContainer}>\n                        <button \n                            className={styles.buttonReset}\n                            disabled={!newPasswordInput} \n                            onClick={() => setPassword(newPasswordInput, resetPasswordToken)}\n                            > Reset</button>\n                    </div> \n               </form>\n        </div>\n    )\n})\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\nimport s from \"./superInput.module.css\";\n\n\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\n\ntype SuperInputTextPropsType = DefaultInputPropsType & { \n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n};\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, \n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n        ...restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange \n        && onChange(e); \n        onChangeText && onChangeText(e.currentTarget.value);\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        e.key === \"Enter\" \n        && onEnter \n        && onEnter(); \n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\n    const finalInputClassName = `${error ? s.errorInput : s.superInput }`; \n\n    return (\n        <>\n            <input\n                type={\"text\"}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n                {...restProps} \n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    );\n}\n\nexport default SuperInputText;","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\nimport s from \"./superInput.module.css\";\n\n\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nexport const SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`;\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} \n        />\n    );\n}\n\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\nimport s from \"./superInput.module.css\";\n\n\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n};\n\nexport const SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, \n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, \n        ...restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n       onChangeChecked && onChangeChecked(e.currentTarget.checked)  \n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\n\n    return (\n        <label>\n           <div className={s.checkboxStyle}>\n           <input\n                type={\"checkbox\"}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} \n            />\n           </div>\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> \n    );\n}\n\n","import React, {ChangeEvent, useState} from 'react'\nimport SuperInputText from './Test/SuperInput'\nimport styles from '../components/Test/superInput.module.css'\nimport { SuperButton } from './Test/SuperButton'\nimport { SuperCheckbox } from './Test/SuperCheckbox'\n\n\nexport const TestPage = () => {\n\n    const [text, setText] = useState<string>('')\n    \n    const [checked, setChecked] = useState<boolean>(false)\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\n\n    const error = text ? '' : 'error'\n    \n    const showAlert = () => {\n        if (error) {\n            alert('Введите текст...')\n        } else {\n            alert(text)\n        }\n    }\n\n    return (\n        <div className={styles.mainDivTest}>\n            <SuperInputText \n                value={text}\n                onChangeText={setText}\n                onEnter={showAlert}\n                error={error}\n                className={styles.superInput} />\n            <SuperButton red onClick={showAlert}>Delete</SuperButton>\n            <SuperCheckbox checked={checked} onChangeChecked={setChecked}> Some text... </SuperCheckbox>\n            <SuperCheckbox checked={checked} onChange={testOnChange}> Is it working? </SuperCheckbox>\n        </div>\n    )\n}\n","import React from 'react'\nimport { NavLink} from 'react-router-dom'\nimport styles from '../styles/header.module.css'\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppRootStateType} from \"../redux/store\";\nimport {logoutTC} from \"../redux/login-reducer\";\nimport {RequestStatusType} from \"../redux/reducers/app-reducer\";\n\n\nexport const Header = () => {\n    const isLoggedIn=useSelector<AppRootStateType, boolean>(state => state.login.isLoggedIn)\n    const isStatus=useSelector<AppRootStateType, RequestStatusType>(state => state.app.status)\n    const  dispatch =useDispatch()\n\n    // Обработчк кнопки вылогиниться\n    const logoutHandler=()=> {\n        dispatch(logoutTC())\n    }\n\n    // useEffect(()=> {\n    //     dispatch(initializeAppTC())\n    // }, [])\n    //\n    // if (!isInitialized) {\n    //     return <Redirect to={'/login'}/>\n    // }\n\n    return (\n        <div className={styles.mainDiv}>\n           <div className={styles.linksContainer}>\n           <div className={styles.login}>\n               {isStatus === 'loading' ? <div >Loading...</div> : ''}\n               {isLoggedIn ?   <button disabled={isStatus === 'loading'} onClick={logoutHandler} >Log Out</button> :\n                <NavLink to={'/login'}> Login </NavLink>}\n            </div>\n            <div className={styles.signup}>\n              <NavLink to={'/signup'}>Sign Up</NavLink>  \n            </div>\n           </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport styles from '../styles/navlink.module.css'\n\nexport const  Navlink = () => {\n    return (\n        <div className={styles.mainDiv}>\n            <div><NavLink to={'/profile'}>Profile</NavLink></div>\n            <div><NavLink to={'/404'} >404</NavLink></div>\n            <div><NavLink to={'/forgotPassword'}>Forgot Password</NavLink></div>\n            <div> <NavLink to={'/resetPassword'}>Reset Password</NavLink></div>\n            <NavLink to={'/test'}>Test</NavLink>\n        </div>\n    )\n}\n","import styles from '../styles/App.module.css';\nimport { HashRouter, Redirect, Route } from 'react-router-dom'\nimport { Login } from './Login';\nimport { SignUp } from './SignUp';\nimport { Profile } from './Profile';\nimport { Page404 } from './Page404';\nimport { ForgotPassword } from './ForgotPassword';\nimport { ResetPassword } from './ResetPassword';\nimport { TestPage } from './TestPage'; \nimport { Header } from './Header';\nimport React from 'react';\nimport { Navlink } from './Navlink';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppRootStateType} from \"../redux/store\";\nimport {initializeAppTC} from \"../redux/reducers/app-reducer\";\n\n\nexport const App = () => {\n    const isInitialized=useSelector<AppRootStateType, boolean>(state => state.app.isInitialized)\n    const  dispatch =useDispatch()\n\n\n    // useEffect(()=> {\n    //\n    //     dispatch(initializeAppTC())\n    // }, [])\n    // //\n    // if (!isInitialized) {\n    //     return <Redirect to={'/login'} />\n    // }\n\n  return (\n\n      <div className={styles.appStyles}>\n        <HashRouter>\n            <div><Header/></div>\n            <Navlink/>\n            <div className={styles.navlinkStyle}> \n            <Route exact path={'/login'} component={Login} />\n            <Route exact path={'/signup'} component={SignUp} />\n            <Route exact path={'/profile'} component={Profile}/>\n            <Route exact path={'/404'} component={ Page404 }/>\n            <Route exact path={'/forgotPassword'} component={ ForgotPassword }/>\n            <Route exact path={'/resetPassword/:resetPasswordToken'} component={ ResetPassword }/>\n            <Route exact path={'/test'} component={ TestPage }/>\n            </div>\n            </HashRouter>\n      </div>\n\n  )\n}\n\n\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { appReducer } from './reducers/app-reducer';\nimport {applyMiddleware, combineReducers, createStore} from 'redux'\nimport thunkMiddleware from 'redux-thunk'\nimport { loginReducer} from \"./login-reducer\";\nimport {profileReducer} from \"./profile-reducer\";\nimport { forgotPasswordReducer } from './reducers/forgot-password-reducer';\n\nconst rootReducer = combineReducers({\n    app: appReducer,\n    login:  loginReducer,\n    profile: profileReducer,\n    forgotPassword: forgotPasswordReducer,\n})\n// непосредственно создаём store\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\n\nexport type AppRootStateType = ReturnType<typeof rootReducer>\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.module.css';\nimport { App } from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\n\nimport axios from 'axios';\n\nimport {BrowserRouter} from \"react-router-dom\";\n\n\n// deploy GitHub Pages,\n//--в компоненте роуты писать в виде строковых констант\n\nReactDOM.render(\n  <React.StrictMode> \n    <Provider store={store}>\n        <BrowserRouter>\n        <App/> \n        </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nreportWebVitals();\n\nexport const apiAddress = \"https://neko-back.herokuapp.com/2.0\"\n//axios.post(`${apiAddress}/friends`)","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainSignupContainer\":\"signup_mainSignupContainer__3nRwz\",\"signupForm\":\"signup_signupForm__2vqMS\",\"signupContainer\":\"signup_signupContainer__3bgZK\",\"emailContainer\":\"signup_emailContainer__gc2cC\",\"passwordContainer\":\"signup_passwordContainer__201wf\",\"emailInput\":\"signup_emailInput__kD3sG\",\"passwordInput\":\"signup_passwordInput__WpWms\",\"spanDiv\":\"signup_spanDiv__1d7tB\",\"signupSpan\":\"signup_signupSpan__2L6S8\",\"nameInput\":\"signup_nameInput__3kU1C\",\"surnameInput\":\"signup_surnameInput__201dW\",\"nameInputs\":\"signup_nameInputs__1dnGG\",\"firstNameContainer\":\"signup_firstNameContainer__27kzg\",\"secondNameContainer\":\"signup_secondNameContainer__36Lb2\",\"buttonContainer\":\"signup_buttonContainer__3O9iO\",\"buttonSignup\":\"signup_buttonSignup__3Vbom\",\"errorCheckStyle\":\"signup_errorCheckStyle__2n7Jt\"};"],"sourceRoot":""}