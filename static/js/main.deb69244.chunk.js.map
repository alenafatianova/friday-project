{"version":3,"sources":["api/instance.ts","api/Login-api.ts","redux/reducers/app-reducer.ts","redux/reducers/profile-reducer.ts","redux/reducers/login-reducer.ts","components/Login.tsx","api/sign-up-api.ts","redux/reducers/sign-up-reducer.ts","components/SignUp.tsx","components/Profile.tsx","components/Page404.tsx","api/forgot-password-api.ts","redux/reducers/forgot-password-reducer.ts","components/ForgotPassword.tsx","components/ResetPassword.tsx","components/Test/SuperInput.tsx","components/Test/SuperButton.tsx","components/Test/SuperCheckbox.tsx","components/TestPage.tsx","components/Header.tsx","components/Navlink.tsx","components/Cards.tsx","api/packs-api.ts","redux/reducers/cards-pack-reducer.ts","components/Table/TableComponent.tsx","components/Table/SearchField.tsx","components/Packs.tsx","components/App.tsx","reportWebVitals.ts","redux/store.ts","index.tsx","styles/login.module.css","styles/signup.module.css","components/Test/superInput.module.css","styles/forgotPassword.module.css","styles/resetPassword.module.css","styles/Packs.module.css","styles/header.module.css","styles/notFoundPage.module.css","styles/navlink.module.css"],"names":["instance","axios","create","baseURL","withCredentials","authAPI","data","post","delete","initialState","status","error","isInitialized","setAppErrorAC","type","setAppStatusAC","_id","email","name","avatar","publicCardPacksCount","created","updated","isAdmin","verified","rememberMe","setUserAC","isLoggedIn","setIsLoggedInAC","value","Login","dispatch","useDispatch","useSelector","state","login","isStatus","app","useState","emailValue","setEmailValue","passwordValue","setPasswordValue","emailEmpty","setEmailEmpty","passwordEmpty","setPasswordEmpty","rememberMeValue","setRememberMeValue","to","className","styles","mainContainer","loginForm","spanDiv","loginSpan","signupSpan","dataContainer","emailContainer","emailLabel","placeholder","emailInput","onChange","e","currentTarget","onBlur","length","errorCheckStyle","passwordContainer","passwordLabel","passwordInput","rememberMeContainer","rememberMeLabel","rememberMeInput","checked","loadingStatus","failedStatus","buttonContainer","disabled","buttonLogin","onClick","password","a","then","res","catch","response","message","console","log","signUpAPI","SIGNUP_DATA","signUp","SignUp","setEmail","emptyEmail","setEmptyEmail","setPassword","emptyPassword","setEmptyPassword","history","useHistory","signUpNahdler","signUpThunk","push","mainSignupContainer","signupForm","signupContainer","buttonSignup","Profile","profile","Page404","container","getLostSpan","mainDiv","forgotPasswordAPI","from","info","alert","resetPasswordToken","initialForgotPasswordState","newPassword","SEND_EMAIL","RESET_PASSWORD","resetPassword","sendEmailThunk","sendEmail","ForgotPassword","React","memo","setEmailInput","inputEmpty","setInputEmpty","loading","setLoading","recoverForm","recoverSpan","recoverPasswordContainer","enterEmailSpan","inputStyle","recoverInput","buttonReset","ResetPassword","newPasswordInput","setNewPasswordInput","newPasswordEmpty","setnewPasswordEmpty","useParams","useCallback","setNewPasswordThunk","isLoading","resetForm","resetSpan","newPasswordContainer","requestMessage","newPasswordLabel","SuperInputText","onChangeText","onKeyPress","onEnter","spanClassName","restProps","finalSpanClassName","s","finalInputClassName","errorInput","superInput","key","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checkboxStyle","TestPage","text","setText","setChecked","showAlert","mainDivTest","SuperInput","Header","linksContainer","logoutButton","signup","Navlink","Cards","packsAPI","page","pageCount","get","params","cardsPack","initialPacksState","cardPacks","cardPacksTotalCount","maxCardsCount","minCardsCount","GET_PACKS","ADD_PACK","CHANGE_PACK","DELETE_PACK","addCardsPackAC","getPacksThunk","getPacks","err","TableComponent","dispatchGetPacksThunk","pagesCount","packs","useEffect","rows","id","label","disableSorting","setPage","pages","order","orderBy","classes","makeStyles","theme","table","marginTop","spacing","fontWeight","color","palette","primary","contrastText","backgroundColor","light","cursor","useStyles","handlerChangePage","event","newPage","descendingComparator","b","TableContainer","Table","TableBody","array","comparator","stabilizedThis","map","el","index","sort","stableSort","getComparator","row","TableRow","TableCell","cardsCount","TableFooter","TablePagination","component","rowsPerPageOptions","rowsPerPage","count","onChangePage","onChangeRowsPerPage","parseInt","target","SearchField","addPackHandler","newCardsPack","addCardsThunk","Toolbar","FormControl","InputLabel","Input","inputProps","startAdornment","InputAdornment","position","searchButton","packsAddButtonDiv","packsAddButton","Packs","packsMainDiv","tableContainer","packsCheckbox","App","appStyles","navlinkStyle","exact","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","forgotPassword","pack","filter","store","createStore","composeWithDevTools","applyMiddleware","thunkMiddleware","ReactDOM","StrictMode","document","getElementById","apiAddress","module","exports"],"mappings":"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","file":"static/js/main.deb69244.chunk.js","sourcesContent":["import axios from 'axios'\n\n\nexport  const instance = axios.create({\n    baseURL: 'https://neko-back.herokuapp.com/2.0/',\n    withCredentials: true\n   })\n\n\n// export const instance = axios.create({\n//     baseURL: 'http://localhost:7542/2.0/',\n//     withCredentials: true\n// })","import axios from 'axios'\nimport { instance } from './instance';\n \n\n\n// api\nexport const authAPI  = {\n    login(data: LoginRequestType) {\n        return instance.post<LoginResponseType>('auth/login', data);\n    },\n    PostMe() {\n        return instance.post<LoginResponseType>('auth/me', {});\n    },\n    PutMe( name: string, avatar: string) {\n        return instance.put<{ updatedUser:LoginResponseType, error?: string}>('auth/me', {});\n    },\n    DeleteMe() {\n        return instance.delete<{info: string, error: string}>('auth/me', {});\n    } \n}\n\n// types\n\nexport type LoginRequestType = {\n    email: string\n    password: string\n    rememberMe: boolean\n}\n\nexport type LoginResponseType = {\n   _id: string\n    email: string\n    name: string\n    avatar?: string\n    publicCardPacksCount: number\n    created: string\n    updated: string\n    isAdmin: boolean\n    verified: boolean\n    rememberMe: boolean\n    error?: string\n}\n\n// export type PutMeRequestType = {\n//     name: string\n//     avatar: string\n// }\n//\n// export type PutMeResponseType = {\n//     updatedUser:LoginResponseType\n//     error?: string\n// }","import {Dispatch} from \"redux\";\nimport {authAPI} from \"../../api/Login-api\";\nimport {setIsLoggedInAC} from \"./login-reducer\";\n\n\nconst initialState: InitialStateType = {\n    status: 'idle',\n    error: null,\n    isInitialized: false\n}\n\nexport const appReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\n    switch (action.type) {\n        case 'APP/SET-STATUS':\n            return {...state, status: action.status}\n        case 'APP/SET-ERROR':\n            return {...state, error: action.error}\n        case 'APP/SET-INITIALIZED':\n            return {...state, isInitialized: action.isInitialized}\n        default:\n            return {...state}\n    }\n}\n\nexport type RequestStatusType =  'idle' | 'loading' | 'succeeded' | 'failed'\nexport type InitialStateType = {\n    // происходит ли сейчас взаимодействие с сервером\n    status: RequestStatusType\n    // если ошибка какая-то глобальная произойдёт - мы запишем текст ошибки сюда\n    error: string | null\n    isInitialized: boolean\n}\n\nexport const setInitializedAC=(isInitialized: boolean) =>({ type: 'APP/SET-INITIALIZED', isInitialized} as const)\nexport const setAppErrorAC = (error: string | null) => ({ type: 'APP/SET-ERROR', error } as const)\nexport const setAppStatusAC = (status:  RequestStatusType) => ({ type: 'APP/SET-STATUS', status } as const)\n\n\n//tnunk\n\nexport const initializeAppTC = () => (dispatch: Dispatch) => {\n\n    authAPI.PostMe().then(res => {\n      dispatch(setIsLoggedInAC(true));\n\n    }).catch((e)=> {\n       console.log(e)\n    })\n}\n\n\nexport type SetInitializedActionType = ReturnType<typeof setInitializedAC>\nexport type SetAppErrorActionType = ReturnType<typeof setAppErrorAC>\nexport type SetAppStatusActionType = ReturnType<typeof setAppStatusAC>\n\ntype ActionsType =\n    | SetAppErrorActionType\n    | SetAppStatusActionType\n    | SetInitializedActionType\n","import {LoginResponseType} from \"../../api/Login-api\";\n\nconst initialState: InitialStateType = {\n\n        _id: '',\n        email: '',\n        name: '',\n        avatar: '',\n        publicCardPacksCount: 0,\n        created: '',\n        updated: '',\n        isAdmin: false,\n        verified: false,\n        rememberMe: false,\n        error: ''\n\n}\n\nexport const profileReducer = (state: InitialStateType = initialState, action: SetUserActionsType): InitialStateType => {\n    switch (action.type) {\n        case 'SET-USER':\n            return {...state,  ...action.data}\n\n        default:\n            return {...state}\n    }\n}\n\n\nexport type InitialStateType = {\n\n        _id: string,\n        email: string,\n        name: string,\n        avatar?: string,\n        publicCardPacksCount: number,\n        created: string,\n        updated: string,\n        isAdmin: boolean,\n        verified: boolean,\n        rememberMe: boolean,\n        error?: string\n\n}\n\nexport const setUserAC = (data: LoginResponseType) => ({type: 'SET-USER', data} as const)\n\n    // types\nexport type SetUserActionsType = ReturnType<typeof setUserAC >\n\n\n","import {Dispatch} from 'redux'\nimport {setAppErrorAC, SetAppErrorActionType, setAppStatusAC, SetAppStatusActionType} from \"./app-reducer\";\nimport {authAPI, LoginRequestType} from \"../../api/Login-api\";\nimport {setUserAC, SetUserActionsType} from \"../reducers/profile-reducer\";\n\nconst initialState = {\n    isLoggedIn: false\n}\ntype InitialStateType = typeof initialState\n\nexport const loginReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\n    switch (action.type) {\n        case 'login/SET-IS-LOGGED-IN':\n            return {...state, isLoggedIn: action.value}\n        default:\n            return state\n    }\n}\n\n// actions\nexport const setIsLoggedInAC = (value: boolean) =>\n    ({type: 'login/SET-IS-LOGGED-IN', value} as const)\n\n// thunks\nexport const loginTC = (data: LoginRequestType) => async (dispatch: Dispatch<ActionsType>) => {\n\n    dispatch(setAppStatusAC('loading'))\n    await authAPI.login(data).then((res) => {\n        debugger\n        dispatch(setIsLoggedInAC(true))\n        dispatch(setAppStatusAC('succeeded'))\n        dispatch(setUserAC(res.data))\n    })\n        .catch((e) => {\n            const error = e.response ? e.response.data.error : (e.message + ' more details in the console');\n            dispatch(setAppStatusAC('failed'))\n            dispatch(setAppErrorAC(error.message))\n            console.log(error.error)\n        })\n}\n\nexport const logoutTC = () => (dispatch: Dispatch<ActionsType>) => {\n    dispatch(setAppStatusAC('loading'))\n    authAPI.DeleteMe()\n        .then(res => {\n            dispatch(setIsLoggedInAC(false))\n            dispatch(setAppStatusAC('succeeded'))\n        })\n        .catch((e) => {\n            const error = e.response ? e.response.data.error : (e.message + ' more details in the console');\n            dispatch(setAppStatusAC('failed'))\n            dispatch(setAppErrorAC(error.message))\n        })\n}\n\n\n// types\ntype ActionsType = ReturnType<typeof setIsLoggedInAC> | SetAppStatusActionType | SetAppErrorActionType | SetUserActionsType\n\n\n\n","import React, {ChangeEvent, useEffect, useState} from 'react'\nimport styles from '../styles/login.module.css'\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {Redirect} from 'react-router-dom';\nimport {AppRootStateType} from \"../redux/store\";\nimport {loginTC} from \"../redux/reducers/login-reducer\";\nimport {RequestStatusType} from \"../redux/reducers/app-reducer\";\n\n\nexport const Login = () => {\n\n    const dispatch = useDispatch()\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.login.isLoggedIn)\n    const isStatus = useSelector<AppRootStateType, RequestStatusType>(state => state.app.status)\n\n    //--проверка email, password forms\n    const [emailValue, setEmailValue] = useState<string>('nya-admin@nya.nya')\n    const [passwordValue, setPasswordValue] = useState<string>('1qazxcvBG')\n    const [emailEmpty, setEmailEmpty] = useState<boolean>(false)\n    const [passwordEmpty, setPasswordEmpty] = useState<boolean>(false)\n    const [rememberMeValue, setRememberMeValue] = useState<boolean>(false)\n    const [dis, setDis] = useState(false)\n\n    // Обработчк кнопки залогиниться\n    const loginHandler = () => {\n        dispatch(loginTC({email: emailValue, password: passwordValue, rememberMe: rememberMeValue}))\n       }\n\n\n    const emailCheck = () => {\n        setEmailEmpty(emailValue.length === 0)\n    }\n    const passwordCheck = () => {\n        setPasswordEmpty(passwordValue.length === 0)\n    }\n\n    const updateEmailValue = (e: ChangeEvent<HTMLInputElement>) => {\n        setEmailValue(e.currentTarget.value)\n    }\n    const updatePasswordValue = (e: ChangeEvent<HTMLInputElement>) => {\n        setPasswordValue(e.currentTarget.value)\n    }\n\n    const updateRememberMeValue = () => {\n        setRememberMeValue(!rememberMeValue)\n    }\n    //\n    // useEffect(() => {\n    //     setTimeout(() => {\n    //         return <Redirect to={'/profile'}/>\n    //     }, 1000)\n    // }, [])\n\n    if (isLoggedIn) {\n\n            return <Redirect to={'/profile'}/>\n\n    }\n    return (\n        <div className={styles.mainContainer}>\n\n            <form className={styles.loginForm}>\n\n                <div className={styles.spanDiv}>\n                    <div className={styles.loginSpan}><span>Login</span></div>\n                    <div className={styles.signupSpan}><span>Sign Up</span></div>\n                </div>\n                <div className={styles.dataContainer}>\n                    <div className={styles.emailContainer}>\n                        <label className={styles.emailLabel}>Email</label>\n                        <div>\n                            <input\n                                type=\"text\"\n                                placeholder='Email'\n                                className={styles.emailInput}\n                                value={emailValue}\n                                onChange={updateEmailValue}\n                                onBlur={emailCheck}\n                            />\n                            {emailEmpty && <div className={styles.errorCheckStyle}>Email is required</div>}\n                        </div>\n                    </div>\n                    <div>\n                        <div className={styles.passwordContainer}>\n                            <label className={styles.passwordLabel}>Password</label>\n                            <div>\n                                <input\n                                    type=\"text\"\n                                    placeholder='Password'\n                                    className={styles.passwordInput}\n                                    value={passwordValue}\n                                    onChange={updatePasswordValue}\n                                    onBlur={passwordCheck}\n                                />\n                                {passwordEmpty && <div className={styles.errorCheckStyle}>Password is required</div>}\n                            </div>\n                        </div>\n                    </div>\n                    <div className={styles.rememberMeContainer}>\n                        <label className={styles.rememberMeLabel}>Remember me</label>\n                        <div>\n                            <input\n                                type=\"checkbox\"\n                                className={styles.rememberMeInput}\n                                checked={rememberMeValue}\n                                onChange={updateRememberMeValue}\n                            />\n                        </div>\n                    </div>\n                </div>\n                <div>\n                    {/*<div className={styles.loadingStatus} aria-disabled={dis}>{isStatus === 'succeeded' ?*/}\n                    {/*    <div>Success!</div> : ''}</div>*/}\n                    <div className={styles.loadingStatus}>{isStatus === 'loading' ? <div>Loading...</div> : ''}</div>\n                    <div className={styles.failedStatus}>{isStatus === 'failed' ?\n                        <div>Not valid email or password</div> : ''}</div>\n                </div>\n                <div className={styles.buttonContainer}>\n                    <button disabled={isStatus === 'loading'} className={styles.buttonLogin} onClick={loginHandler}> Log\n                        In\n                    </button>\n                </div>\n\n\n            </form>\n\n        </div>\n    )\n}\n","import { instance } from \"./instance\";\n\n\ntype signUpResponseType = {\n    addedUser: {}\n    error: string\n}\n\nexport const signUpAPI = {\n    signUp(email: string, password: string) {\n   return instance.post<signUpResponseType>('auth/register', {email, password}) \n}}","import { setAppStatusAC } from './app-reducer';\nimport { signUpAPI } from './../../api/sign-up-api';\nimport { Dispatch } from 'redux'\n\n\nconst initialSignUpState = {\n    email: '',\n    password: ''\n}\n\nconst SIGNUP_DATA = 'SIGNUP_DATA'\n\nexport type signUpPayloadType = {\n    email: string\n    password: string\n}\n\nexport const signUpReducer = (state =  initialSignUpState, action: SignUpActionsType) => {\n    switch(action.type) {\n        case SIGNUP_DATA: {\n            return {\n                ...state, \n                email: action.email,\n                password: action.password\n            }\n        }\n        default: {\n            return state;\n        }\n    }\n}\n\nexport const signUp = (email: string, password: string) => ({type: SIGNUP_DATA, email, password})\n\ntype SignUpActionsType = ReturnType<typeof signUp> \n\nexport const signUpThunk = (email: string, password: string) => async(dispatch: Dispatch) => {\n   try {\n        dispatch(setAppStatusAC('loading'))\n        await signUpAPI.signUp(email, password)\n            dispatch(signUp(email, password))\n    }\n    catch(err) {\n        console.log(err)\n    }\n}   \n","import React, { ChangeEvent, useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { signUpThunk } from '../redux/reducers/sign-up-reducer'\nimport styles from '../styles/signup.module.css'\n\n\n\nexport const SignUp = () => {\n\n    const [email, setEmail] = useState<string>('')\n    const [emptyEmail, setEmptyEmail] = useState<boolean>(false)\n    const emailValue = (e: ChangeEvent<HTMLInputElement>) => setEmail(e.currentTarget.value)\n    const emailCheck = () => setEmptyEmail(email.length === 0)\n\n    const [password, setPassword] = useState<string>('')\n    const [emptyPassword, setEmptyPassword] = useState<boolean>(false)\n    const passwordValue = (e: ChangeEvent<HTMLInputElement>) => setPassword(e.currentTarget.value)\n    const passwordCheck = () => setEmptyPassword(password.length === 0)\n    \n   const dispatch = useDispatch()\n   const history = useHistory()\n   \n   const signUpNahdler = (email: string, password: string) => {\n       dispatch(signUpThunk(email, password))\n       history.push('/login')\n   }\n    \n    return (\n        <div className={styles.mainSignupContainer}>\n           \n             <form className={styles.signupForm}>\n             <div className={styles.spanDiv}>\n             <span className={styles.loginSpan}>Login</span>\n             <span className={styles.signupSpan}>Sign Up</span>\n             </div>\n             <div className={styles.signupContainer}>\n                <div className={styles.emailContainer}>\n                        <label className={styles.emailLabel}>Email</label>\n                    <div>\n                        <input \n                            type=\"text\" \n                            placeholder='Enter' \n                            className={styles.emailInput} \n                            value={email}\n                            onChange={emailValue}\n                            onBlur={emailCheck}\n                        />\n                        {emptyEmail && <div className={styles.errorCheckStyle}>Email is required</div>}\n                    </div>\n                </div>\n                <div>\n                    <div className={styles.passwordContainer}>\n                            <label className={styles.passwordLabel}>Password</label>\n                        <div>\n                            <input \n                                type=\"password\" \n                                placeholder='Enter' \n                                className={styles.passwordInput} \n                                value={password}\n                                onChange={passwordValue}\n                                onBlur={passwordCheck}\n                            />\n                        {emptyPassword && <div className={styles.errorCheckStyle}>Password is required</div>}\n                        </div>\n                    </div>\n                </div>\n             </div>\n                <div className={styles.buttonContainer}>\n                    <button \n                        className={styles.buttonSignup}\n                        onClick={() => signUpNahdler(email, password)}\n                        > Sign Up</button>\n                </div>\n             </form>\n        </div>\n    )\n}\n","import React from 'react'\nimport {useSelector} from \"react-redux\";\nimport {AppRootStateType} from \"../redux/store\";\nimport {Redirect} from \"react-router-dom\";\n\nexport const Profile = () => {\n\n    const {email, name, avatar, publicCardPacksCount} = useSelector<AppRootStateType, any>(state => state.profile)\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.login.isLoggedIn)\n\n\n    if (!isLoggedIn) {\n        return <Redirect to={'/login'}/>\n    }\n    return (\n        <div>\n            <div>Email: {email}</div>\n            <div> Name: {name}</div>\n            <div>Avatar: {avatar}</div>\n            <div>PublicCardPacksCount: {publicCardPacksCount}</div>\n\n\n        </div>\n    )\n}\n","import React from 'react'\nimport styles from '../styles/notFoundPage.module.css'\n\nexport const Page404 = () => {\n    return (\n      <div className={styles.container}>\n            <span className={styles.getLostSpan}>Oops... You get lost</span>\n            <div className={styles.mainDiv}></div>\n        </div>\n    )\n}\n","import { instance } from \"./instance\"\n\n\ntype forgotPasswordResponseType = {\n    info: string\n    error: string\n}\ntype setNewPasswordResponseType = {\n    info: string\n    error: string\n}\n\nexport const forgotPasswordAPI = {\n    async forgotPassword(email: string, from?: string, message?: string)  {\n        try {\n        const response = await instance.post<forgotPasswordResponseType>(`auth/forgot`, {email, from, message})\n         if (response.status === 200) {\n            return console.log(response.data.info)\n         }\n        }\n        catch(error) {\n            return alert(error);\n        }  \n    },\n    async setNewPassword(password: string, resetPasswordToken: string) {\n        try{\n            const response = await instance.post<setNewPasswordResponseType>(`auth/set-new-password/`, {password, resetPasswordToken})\n            if(response.status === 200) {\n                return console.log(response.data.info);\n            } \n        }\n        catch(error) {\n            return console.log(error);\n        }\n    }\n}\n","\nimport { forgotPasswordAPI } from '../../api/forgot-password-api';\nimport { Dispatch } from \"redux\";\nimport { setAppStatusAC } from './app-reducer';\n\n\nexport const initialForgotPasswordState: initialForgotPasswordStateType = {\n    email: '',\n    newPassword: '',\n}\n\nexport type initialForgotPasswordStateType = {\n    email: string\n    newPassword: string\n}\n\nconst SEND_EMAIL = 'friday-project/forgot-password-reducer/SEND_EMAIL';\nconst RESET_PASSWORD = 'friday-project/forgot-password-reducer/RESET_PASSWORD';\nconst REQUEST_STATUS = 'friday-project/forgot-password-reducer/REQUEST_STATUS';\n\n\nexport const forgotPasswordReducer = (state: initialForgotPasswordStateType = initialForgotPasswordState, action: actionsType) => {\n    switch(action.type) {\n        case SEND_EMAIL: {\n            return {\n                ...state,\n                email: action.email, \n            }\n        }\n        case RESET_PASSWORD: {\n            return {\n                ...state, \n                newPassword: action.newPassword\n            }\n        }\n        default: \n            return state;\n    }\n}\n\n\n//--- Action Creators ------\nexport const sendEmail = (email: string) => ({type: SEND_EMAIL, email} as const)\nexport const resetPassword = (newPassword: string) => ({type: RESET_PASSWORD, newPassword} as const)\n\n\n// ------ thunk for dispatching action creator ---------\nexport const sendEmailThunk = (email: string) => (dispatch: Dispatch) => {\n    const from = \"test-front-admin <alyena.fatianova@gmail.com>\"\n    const message = `<div style=\"background-color: lime; padding: 15px\">\n    password recovery link: \n    <a href='http://localhost:3000/#/resetPassword/$token$'>link</a> </div>`\n    forgotPasswordAPI.forgotPassword(email, from, message)\n    dispatch(sendEmail(email))  \n}\n\nexport const setNewPasswordThunk = (newPassword: string, resetPasswordToken: string) => async(dispatch: Dispatch<actionsType>) => { \n    try {\n        await forgotPasswordAPI.setNewPassword(newPassword, resetPasswordToken) \n        dispatch(resetPassword(newPassword))\n    }\n    catch(err) {\n        console.log(err)\n    }\n}\n\n\ntype actionsType =  | ReturnType<typeof sendEmail>\n                    | ReturnType<typeof resetPassword>\n\n","import { spawn } from 'child_process'\nimport React, { ChangeEvent, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { sendEmailThunk } from '../redux/reducers/forgot-password-reducer'\nimport styles from '../styles/forgotPassword.module.css'\n\n\n\nexport const ForgotPassword = React.memo(() => {\n    \n    const [emailInput, setEmailInput] = useState<string>('')\n    const emailValue = (e: ChangeEvent<HTMLInputElement>) => setEmailInput(e.currentTarget.value)\n    const [inputEmpty, setInputEmpty] = useState<boolean>(false)\n    const inputCheck = () => setInputEmpty(emailInput.length === 0)\n    const [loading, setLoading] = useState<boolean>(false)\n\n    const dispatch = useDispatch()\n\n\n    const onSendEmail = (email: string) => {\n        dispatch(sendEmailThunk(email))\n        setLoading(true)\n    }\n\n   \n\n  \n    return (\n        <div className={styles.mainContainer}>\n        <form className={styles.recoverForm}>\n             <div className={styles.recoverSpan}>\n            {loading  ? <div>Loading...</div>  :  <span>Forgot password?</span>}\n                </div>\n             <div className={styles.dataContainer}>\n                 <div className={styles.recoverPasswordContainer}>\n                      <span className={styles.enterEmailSpan}>\n                          Enter you email to receive password\n                      </span>\n                     <div className={styles.inputStyle}>\n                         <input \n                            type=\"email\" \n                            placeholder='Your email address' \n                            className={styles.recoverInput} \n                            value={emailInput}\n                            onChange={emailValue}\n                            onBlur={inputCheck}\n                         />\n                         {inputEmpty && <div className={styles.errorCheckStyle}>Required</div>}\n                     </div>\n                 </div>\n             </div>\n             <div className={styles.buttonContainer}>\n                <button \n                    className={styles.buttonReset} \n                    disabled={!emailInput}\n                    onClick={() => onSendEmail(emailInput)}\n                    > Send\n                </button>\n             </div> \n        </form>\n </div>\n)\n})\n\n\n","import React, { ChangeEvent, useCallback, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {  useParams } from 'react-router-dom'\nimport { RequestStatusType } from '../redux/reducers/app-reducer'\nimport { setNewPasswordThunk } from '../redux/reducers/forgot-password-reducer'\nimport { AppRootStateType } from '../redux/store'\nimport styles from '../styles/resetPassword.module.css'\n\n\nexport const ResetPassword = React.memo(() => {\n\n    const [newPasswordInput, setNewPasswordInput] = useState<string>('')\n    const [newPasswordEmpty, setnewPasswordEmpty] = useState<boolean>(false)\n    const newPasswordCheck = () => setnewPasswordEmpty(newPasswordInput.length === 0)\n    const passwordValue = (e: ChangeEvent<HTMLInputElement>) => setNewPasswordInput(e.currentTarget.value)\n    const [loading, setLoading] = useState<boolean>(false)\n    \n    const dispatch = useDispatch()\n\n    //---get tokens from the backend----\n    const {resetPasswordToken} = useParams<{resetPasswordToken: string}>();\n    console.log(resetPasswordToken)\n\n\n    const setPassword = useCallback((newPassword: string, resetPasswordToken: string) => { \n        dispatch(setNewPasswordThunk(newPassword, resetPasswordToken)) \n        setLoading(true)\n    },[])\n    \n    const isLoading = useSelector<AppRootStateType, RequestStatusType>(state => state.app.status)\n\n    return (\n        <div className={styles.mainContainer}>\n               <form className={styles.resetForm}>\n                    <div className={styles.resetSpan}><span>Reset Password</span></div>\n                    <div className={styles.dataContainer}>\n                        <div className={styles.newPasswordContainer}>\n                            <div>\n                            {\n                            isLoading === 'loading' \n                            ? <span className={styles.requestMessage}>Loading...</span> \n                            : <label className={styles.newPasswordLabel}>Reset Password</label>\n                            } \n                            </div>\n                            <div>\n                                <input \n                                    type=\"password\" \n                                    placeholder='Enter new password' \n                                    className={styles.newPasswordInput} \n                                    value={newPasswordInput}\n                                    onChange={passwordValue}\n                                    onBlur={newPasswordCheck}\n                                />\n                                {newPasswordEmpty && <div className={styles.errorCheckStyle}>Required</div>} \n                            </div>\n                        </div>\n                    </div>\n                    <div className={styles.buttonContainer}>\n                        <button \n                            className={styles.buttonReset}\n                            disabled={isLoading === 'loading'} \n                            onClick={() => setPassword(newPasswordInput, resetPasswordToken)}\n                            > Reset</button>\n                    </div> \n               </form>\n        </div>\n    )\n})\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\nimport s from \"./superInput.module.css\";\n\n\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\n\ntype SuperInputTextPropsType = DefaultInputPropsType & { \n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n};\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, \n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n        ...restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange \n        && onChange(e); \n        onChangeText && onChangeText(e.currentTarget.value);\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        e.key === \"Enter\" \n        && onEnter \n        && onEnter(); \n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\n    const finalInputClassName = `${error ? s.errorInput : s.superInput }`; \n\n    return (\n        <>\n            <input\n                type={\"text\"}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n                {...restProps} \n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    );\n}\n\nexport default SuperInputText;","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\nimport s from \"./superInput.module.css\";\n\n\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nexport const SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`;\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} \n        />\n    );\n}\n\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\nimport s from \"./superInput.module.css\";\n\n\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n};\n\nexport const SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, \n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, \n        ...restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n       onChangeChecked && onChangeChecked(e.currentTarget.checked)  \n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\n\n    return (\n        <label>\n           <div className={s.checkboxStyle}>\n           <input\n                type={\"checkbox\"}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} \n            />\n           </div>\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> \n    );\n}\n\n","import React, {ChangeEvent, useState} from 'react'\nimport SuperInputText from './Test/SuperInput'\nimport styles from '../components/Test/superInput.module.css'\nimport { SuperButton } from './Test/SuperButton'\nimport { SuperCheckbox } from './Test/SuperCheckbox'\n\n\nexport const TestPage = () => {\n\n    const [text, setText] = useState<string>('')\n    \n    const [checked, setChecked] = useState<boolean>(false)\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\n\n    const error = text ? '' : 'error'\n    \n    const showAlert = () => {\n        if (error) {\n            alert('Введите текст...')\n        } else {\n            alert(text)\n        }\n    }\n\n    return (\n        <div className={styles.mainDivTest}>\n            <SuperInputText \n                value={text}\n                onChangeText={setText}\n                onEnter={showAlert}\n                error={error}\n                className={styles.superInput} />\n            <SuperButton red onClick={showAlert}>Delete</SuperButton>\n            <SuperCheckbox checked={checked} onChangeChecked={setChecked}> Some text... </SuperCheckbox>\n            <SuperCheckbox checked={checked} onChange={testOnChange}> Is it working? </SuperCheckbox>\n        </div>\n    )\n}\n","import React from 'react'\nimport { NavLink} from 'react-router-dom'\nimport styles from '../styles/header.module.css'\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppRootStateType} from \"../redux/store\";\nimport {logoutTC} from \"../redux/reducers/login-reducer\";\nimport {RequestStatusType} from \"../redux/reducers/app-reducer\";\n\n\nexport const Header = () => {\n    const isLoggedIn=useSelector<AppRootStateType, boolean>(state => state.login.isLoggedIn)\n    const isStatus=useSelector<AppRootStateType, RequestStatusType>(state => state.app.status)\n    const  dispatch =useDispatch()\n\n    // Обработчк кнопки вылогиниться\n    const logoutHandler=()=> {\n        dispatch(logoutTC())\n    }\n\n    // useEffect(()=> {\n    //     dispatch(initializeAppTC())\n    // }, [])\n    //\n    // if (!isInitialized) {\n    //     return <Redirect to={'/login'}/>\n    // }\n\n    return (\n        <div className={styles.mainDiv}>\n           <div className={styles.linksContainer}>\n           <div className={styles.login}>\n               {isStatus === 'loading' ? <div >Loading...</div> : ''}\n               {\n               isLoggedIn \n               ? <button \n                    disabled={isStatus === 'loading'} \n                    onClick={logoutHandler}\n                    className={styles.logoutButton}>\n                        Log Out\n                </button> \n               : <NavLink to={'/login'}> Login </NavLink>\n               }\n            </div>\n            <div className={styles.signup}>\n              <NavLink to={'/signup'}>Sign Up</NavLink>  \n            </div>\n           </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport styles from '../styles/navlink.module.css'\n\nexport const  Navlink = () => {\n    return (\n        <div className={styles.mainDiv}>\n            <div><NavLink to={'/profile'}>Profile</NavLink></div>\n            <div><NavLink to={'/cards'}>Cards </NavLink></div>\n            <div> <NavLink to={'/packs'}> Packs </NavLink> </div>\n            {/* <div><NavLink to={'/404'} >404</NavLink></div> */}\n            <div><NavLink to={'/forgotPassword'}>Forgot Password</NavLink></div>\n            <div> <NavLink to={'/resetPassword'}>Reset Password</NavLink></div>\n            <NavLink to={'/test'}>Test</NavLink>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport { AppRootStateType } from '../redux/store'\nimport styles from '../styles/Packs.module.css'\n\nexport const Cards = () => {\n\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.login.isLoggedIn)\n\n    if (!isLoggedIn) {\n        return <Redirect to={'/login'} /> \n    }\n\n    return (\n        <div>\n           \n        </div>\n    )\n}\n","import { instance } from \"./instance\"\n\nexport type CardsPackType = {\n    _id: string\n    user_id: string\n    name: string\n    path: string\n    cardsCount: number\n    grade: number\n    shots: number\n    rating: number\n    type: string\n    created: string\n    updated: string\n    __v: number\n}\n\nexport type getPackResponseType = {\n    cardPacks: Array<CardsPackType>\n    page: number\n    pageCount: number\n    cardPacksTotalCount: number\n}\nexport type addCardsPackResponseType = {\n    newCardsPack: CardsPackType\n}\nexport type updatedCardsPackresponseType = {\n    updatedCardsPack: CardsPackType\n}\nexport type deletedCardsPackResponseType = {\n    deletedCardsPack: CardsPackType\n}\n\nexport const packsAPI = {\n    getCardsPack(page: number, pageCount: number) {\n        return instance.get<getPackResponseType>(`cards/pack`, {params: {page, pageCount}})\n    },\n    addCardsPack(cardsPack: CardsPackType) {\n        return  instance.post<addCardsPackResponseType>('cards/pack', {cardsPack})\n    },       \n    changeCardsPack(_id: string, name: string) {\n        return instance.put<updatedCardsPackresponseType>('cards/pack', {cardsPack: {_id, name}})\n    },\n    deleteCardsPack(id: string) {\n      return instance.delete<deletedCardsPackResponseType>(`cards/pack`, {params: {id}})\n    }\n}","import { CardsPackType, packsAPI, getPackResponseType } from './../../api/packs-api';\nimport { Dispatch } from 'redux';\nimport React from 'react'\n\n\nexport const initialPacksState = {\n    cardPacks: [],\n    cardPacksTotalCount: 14,\n    maxCardsCount: 5,\n    minCardsCount: 0,\n    page: 1,\n    pageCount: 5\n}\nexport type initialPacksStateType = {\n    cardPacks: CardsPackType[]\n    cardPacksTotalCount: number\n    maxCardsCount: number\n    minCardsCount: number\n    page: number\n    pageCount: number\n}\n\n\nconst GET_PACKS = 'friday-project/packs-reducer/GET_PACKS'\nconst ADD_PACK = 'friday-project/packs-reducer/ADD_PACK'\nconst CHANGE_PACK = 'friday-project/packs-reducer/CHANGE_PACK'\nconst DELETE_PACK = 'friday-project/packs-reducer/DELETE_PACK'\n\n\nexport const PacksReducer = (state: initialPacksStateType = initialPacksState, action: cardsPacksActiontype): initialPacksStateType => {\n    switch(action.type) {\n        case GET_PACKS: {\n            return {\n                ...state,\n                ...action.getPacks\n            }\n        }\n        case ADD_PACK: {\n            return {\n                ...state,\n                //cardsPack: [...state.cardsPack, action.cardsPack]\n            }\n        }\n        case CHANGE_PACK: {\n            return {\n                ...state, \n                cardPacks: state.cardPacks.map(pack => pack._id === action._id ? {...pack, name: action.name} : pack)\n            }\n        }\n        case DELETE_PACK: {\n            return {\n                ...state,\n                cardPacks: state.cardPacks.filter(pack => pack._id != action._id)\n            }\n        }\n        default: \n            return state;\n    }\n}\n\n\n//---- actions\nexport const getCardsPacksAC = (getPacks: getPackResponseType) => ({type: GET_PACKS, getPacks} as const)\nexport const addCardsPackAC = (cardsPack: CardsPackType) => ({type: ADD_PACK, cardsPack} as const)\nexport const changeCardsPackAC = (_id: string, name: string) => ({type: CHANGE_PACK, _id, name} as const)\nexport const deleteCardsPackAC = (_id: string) => ({type: DELETE_PACK, _id} as const)\n\n//---- thunks\nexport const getPacksThunk = (page: number, pageCount: number) => async (dispatch: Dispatch) => {\n    // const packs = await packsAPI.getCardsPack(page, pageCount)\n    // .then(res => res.data.cardPacks)\n    // dispatch(getCardsPacksAC(packs))\n    await packsAPI.getCardsPack(page, pageCount)\n        .then(res => dispatch(getCardsPacksAC(res.data)))\n        .catch(err => alert(err))\n}\nexport const addCardsThunk = (cardsPack: CardsPackType) => async(dispatch: Dispatch) => {\n    await packsAPI.addCardsPack(cardsPack)\n        .then(res => {\n            dispatch(addCardsPackAC(res.data.newCardsPack))\n            getPacksThunk(1, 20)\n        })\n        .catch(err =>  alert(err))\n}\n\nexport const updateCardsThunk = (_id: string, name: string) => async(dispatch: Dispatch) => {\n    // const packs = await packsAPI.changeCardsPack(_id, name)\n    // .then(res => res.data.updatedCardsPack)\n    // dispatch(changeCardsPackAC(_id, name))\n    // //dispatch(getCardsPacksAC(packs))\n    await packsAPI.changeCardsPack(_id, name)\n        .then(res => res.data.updatedCardsPack)\n        .then(updatedCardsPack => {\n            dispatch(changeCardsPackAC(updatedCardsPack._id, updatedCardsPack.name))\n            getPacksThunk(1, 20)\n        })\n        .catch(err => alert(err))\n    \n}\nexport const deleteCardsThunk = (_id: string) => async(dispatch: Dispatch) => {\n    // const packs = await packsAPI.deleteCardsPack(_id)\n    // .then(res => res.data.deletedCardsPack)\n    // dispatch(deleteCardsPackAC(_id))\n    // //dispatch(getCardsPacksAC(packs))\n    await packsAPI.deleteCardsPack(_id)\n        .then(res => {\n            deleteCardsPackAC(res.data.deletedCardsPack._id)\n            getPacksThunk(1, 20)\n        })\n       .catch(err => alert(err)) \n}\n\n\n//----action types\nexport type cardsPacksActiontype = \n    | ReturnType<typeof getCardsPacksAC> \n    | ReturnType<typeof addCardsPackAC>\n    | ReturnType<typeof changeCardsPackAC>\n    | ReturnType<typeof deleteCardsPackAC>","import React, { useEffect, useState } from 'react'\nimport { makeStyles, useTheme } from '@material-ui/core/styles'\nimport Table from '@material-ui/core/Table'\nimport TableContainer from '@material-ui/core/TableContainer'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TablePagination from '@material-ui/core/TablePagination'\nimport TableFooter from '@material-ui/core/TableFooter'\nimport {getPacksThunk } from '../../redux/reducers/cards-pack-reducer'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { CardsPackType } from '../../api/packs-api'\nimport { AppRootStateType } from '../../redux/store'\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft'\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight'\nimport IconButton from '@material-ui/core/IconButton'\n\n\n\n\nexport const TableComponent = () => {\n\n    const dispatch = useDispatch();\n    \n\n    const dispatchGetPacksThunk = (page: number, pageCount: number ) => {\n        dispatch(getPacksThunk(page, pageCount))\n    }\n    \n    const pagesCount = useSelector<AppRootStateType, number>(state => state.packs.page)\n    const pageCount = useSelector<AppRootStateType, number>(state => state.packs.pageCount)\n\n    useEffect(() => {\n        dispatchGetPacksThunk(pagesCount, pageCount)\n    }, [])\n    \n    const rows = useSelector<AppRootStateType, Array<CardsPackType>>(state => state.packs.cardPacks)\n    //const page = useSelector<AppRootStateType,number>(state => state.packs.page)\n    \n  \n    \n   \n    //const [rows, setRows] = useState(cardsPacks)\n\n\n    //----- initial state for table headers ------\n    const [headCells, setHeadCells] = useState([\n        {id: 'name', label: 'Name', disableSorting: true},\n        {id: 'cardsCount', label: 'Cards Count'},\n        {id: 'updated', label: 'Updated', disableSorting: true},\n        {id: 'url', label: 'URL', disableSorting: true},\n        {id: 'actions', label: 'Actions',  disableSorting: true}\n    ])\n\n   \n    const [page, setPage] = useState<number>(pagesCount);\n    const pages = [5, 10, 25]\n    const [rowsPerPage, setRowsPerPage] = useState(pages[page])\n\n    const [order, setOrder] = useState<any>()\n    const [orderBy, setOrderBy] = useState<any>()\n\n    \n    \n    \n    //--- overriding default table styles ------\n    const useStyles = makeStyles(theme => ({\n        table: {\n            marginTop: theme.spacing(3),\n            '& thead th': {\n                fontWeight: '600',\n                color: theme.palette.primary.contrastText,  \n                backgroundColor: theme.palette.primary.light\n            },\n            '& tbody td': {\n                fontWeight: '300',\n            },\n            '& tbody tr:hover': {\n                backgroundColor: '#fffbf2',\n                cursor: 'pointer'\n            },\n        },\n    }))\n    const classes = useStyles();\n\n   const handlerChangePage = (event: React.MouseEvent<HTMLButtonElement>, newPage: number) => {\n        setPage(newPage)\n   }\n   const handlerChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>, ) => {\n        dispatchGetPacksThunk(pagesCount, parseInt(event.target.value, 10))\n   }\n  \n\n  function descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\n    if (b[orderBy] < a[orderBy]) {\n      return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n      return 1;\n    }\n    return 0;\n  }\n\n  type Order = 'asc' | 'desc';\n  \n\n  function getComparator<Key extends keyof any>(\n    order: Order,\n    orderBy: Key,\n  ): (a: { [key in Key]: number | string }, b: { [key in Key]: number | string }) => number {\n    return order === 'desc'\n      ? (a, b) => descendingComparator(a, b, orderBy)\n      : (a, b) => -descendingComparator(a, b, orderBy);\n  }\n\n  function stableSort<T>(array: T[], comparator: (a: T, b: T) => number) {\n    const stabilizedThis = array.map((el, index) => [el, index] as [T, number]);\n    stabilizedThis.sort((a, b) => {\n      const order = comparator(a[0], b[0]);\n      if (order !== 0) return order;\n      return a[1] - b[1];\n    });\n    return stabilizedThis.map((el) => el[0]);\n  }\n\n   const rowsAfterSorting = () => {\n       return stableSort(rows, getComparator(order, orderBy))\n   }\n\n\n    return (\n        <div>\n           <TableContainer>\n               <Table className={classes.table}>\n                   <TableBody> \n                        {rowsAfterSorting().map((row => <TableRow>\n                            <TableCell key='name'>{row.name}</TableCell>\n                            <TableCell key='cards-count'>{row.cardsCount}</TableCell>\n                            <TableCell key='updated'>{row.updated}</TableCell>\n                            <TableCell key='url'>URL</TableCell>\n                            <TableCell><button>Update</button></TableCell>\n                            <TableCell><button>Delete</button></TableCell>\n                        </TableRow>))} \n                   </TableBody>\n               </Table>\n           </TableContainer>\n           <TableFooter>\n                 <TableRow>\n                 <TablePagination \n                    component=\"div\" \n                    rowsPerPageOptions={pages} \n                    rowsPerPage={pageCount}\n                    page={pagesCount}\n                    count={rows.length}\n                    onChangePage={() => handlerChangePage}\n                    onChangeRowsPerPage={handlerChangeRowsPerPage} \n                    /> \n                 </TableRow> \n             </TableFooter>\n        </div>\n    )\n}\n\n\n\n\n","import React, { ChangeEvent, useCallback, useState } from 'react'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport TextField from '@material-ui/core/TextField'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { addCardsThunk } from '../../redux/reducers/cards-pack-reducer'\nimport styles from '../../styles/Packs.module.css'\nimport FormControl from '@material-ui/core/FormControl'\nimport InputAdornment from '@material-ui/core/InputAdornment'\nimport Search from '@material-ui/icons/Search' \nimport {makeStyles, createStyles, Theme} from '@material-ui/core/styles'\nimport { CardsPackType } from '../../api/packs-api'\nimport Input from '@material-ui/core/Input'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport { AppRootStateType } from '../../redux/store'\n\n\n\n    \n\n\nexport const SearchField = React.memo(() => {\n\n    const  dispatch = useDispatch();\n\n    const addPackHandler = useCallback((cardsPack: CardsPackType) => { \n        dispatch(addCardsThunk(cardsPack))\n    }, [])\n\n    const [searchFn, setSearchFn] = useState('')\n    const packList = useSelector<AppRootStateType, Array<CardsPackType>>(state => state.packs.cardPacks)\n    \n    const handleSearch = (e: ChangeEvent<HTMLInputElement>) => {\n        const target = e.currentTarget;\n       // setSearchFn((packs: CardsPackType[]) => target.value === '' ? packs : packs.filter(p => p.name.includes(target.value)))   \n    }\n\n    return (\n        <div>\n            <Toolbar>\n                <FormControl>\n                    <InputLabel>Search</InputLabel>\n                    <Input \n                       id='searchingInput'\n                       onChange={handleSearch}\n                        inputProps={{\n                           startAdornment: (\n                               <InputAdornment position=\"start\">\n                               <Search/>\n                               </InputAdornment>\n                           ),\n                       }}/>\n                       \n                </FormControl>\n                <button className={styles.searchButton}>Search</button>\n                <div className={styles.packsAddButtonDiv}>\n                    <button className={styles.packsAddButton} onClick={() => addPackHandler}>Add</button>\n                </div>\n             </Toolbar> \n        </div>\n    )\n})\n","import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport { AppRootStateType } from '../redux/store'\nimport styles from '../styles/Packs.module.css'\nimport { TableComponent } from './Table/TableComponent'\nimport { SearchField } from './Table/SearchField'\n\nexport const Packs = () => {\n    \n    const [loading, setLoading] = useState<boolean>(false)\n   \n    // const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.login.isLoggedIn)\n\n    // if (!isLoggedIn) {\n    //     return <Redirect to={'/login'} /> \n    // }\n\n    return (\n        <div className={styles.packsMainDiv}>\n         <div className={styles.tableContainer}>\n         <div><input className={styles.packsCheckbox} type=\"checkbox\"/> My Packs </div>\n            <SearchField/>\n            <TableComponent />\n             \n         </div>\n        </div>\n    )\n}\n","import styles from '../styles/App.module.css';\nimport {  HashRouter, Redirect, Route, Router, Switch } from 'react-router-dom'\nimport { Login } from './Login';\nimport { SignUp } from './SignUp';\nimport { Profile } from './Profile';\nimport { Page404 } from './Page404';\nimport { ForgotPassword } from './ForgotPassword';\nimport { ResetPassword } from './ResetPassword';\nimport { TestPage } from './TestPage'; \nimport { Header } from './Header';\nimport React, { useEffect } from 'react';\nimport { Navlink } from './Navlink';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppRootStateType} from \"../redux/store\";\nimport {initializeAppTC} from \"../redux/reducers/app-reducer\";\nimport { Cards } from './Cards';\nimport { Packs } from './Packs';\n\n\nexport const App = () => {\n    const isInitialized=useSelector<AppRootStateType, boolean>(state => state.app.isInitialized)\n    //const  dispatch =useDispatch()\n\n\n    // useEffect(()=> {\n    \n    //     dispatch(initializeAppTC())\n    // }, [])\n    //\n    // if (!isInitialized) {\n    //     return <Redirect to={'/login'} />\n    // }\n\n  return (\n      <div className={styles.appStyles}>\n            <div><Header/></div>\n            <Navlink/>\n            <div className={styles.navlinkStyle}> \n            <Switch>\n            <Route exact path={'/'} render={() => <Redirect from={'/'} to={'/profile'} />} />\n            <Route exact path={'/login'} render={() => <Login/>} />\n            <Route exact path={'/signup'} render={() => <SignUp/>} />\n            <Route exact path={'/profile'} render={() => <Profile/>}/>\n            <Route exact path={'/cards'} render={() => <Cards/>} />\n            <Route exact path={'/packs'} render={() => <Packs/>} />\n            <Route exact path={'/forgotPassword'} render={() => <ForgotPassword/> }/>\n            <Route exact path={'/resetPassword/:resetPasswordToken'} render={() => <ResetPassword/> }/>\n            <Route exact path={'/test'} component={ TestPage }/>\n            <Route render={() => <Page404/> }/>\n            </Switch>\n            </div> \n      </div>\n\n  )\n}\n\n\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { PacksReducer } from './reducers/cards-pack-reducer';\nimport { appReducer } from './reducers/app-reducer';\nimport {applyMiddleware, combineReducers, createStore} from 'redux'\nimport {composeWithDevTools} from 'redux-devtools-extension'\nimport thunkMiddleware from 'redux-thunk'\nimport { loginReducer} from \"./reducers/login-reducer\";\nimport {profileReducer} from \"../redux/reducers/profile-reducer\";\nimport { forgotPasswordReducer } from './reducers/forgot-password-reducer';\n\nconst rootReducer = combineReducers({\n    app: appReducer,\n    login:  loginReducer,\n    profile: profileReducer,\n    forgotPassword: forgotPasswordReducer,\n    packs: PacksReducer\n})\n// непосредственно создаём store\nexport const store = createStore(\n    rootReducer, \n    composeWithDevTools( applyMiddleware(thunkMiddleware))\n   )\n\nexport type AppRootStateType = ReturnType<typeof rootReducer>\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.module.css';\nimport { App } from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\nimport {BrowserRouter} from \"react-router-dom\";\n\n\nReactDOM.render(\n  <React.StrictMode> \n    <Provider store={store}>\n        <BrowserRouter>\n        <App/> \n        </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nreportWebVitals();\n\nexport const apiAddress = \"https://neko-back.herokuapp.com/2.0\"\n//axios.post(`${apiAddress}/friends`)","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"login_mainContainer__1yXrH\",\"loginForm\":\"login_loginForm__X-YfN\",\"dataContainer\":\"login_dataContainer__3UeUz\",\"emailInput\":\"login_emailInput__7bhux\",\"passwordInput\":\"login_passwordInput__1VXsF\",\"emailContainer\":\"login_emailContainer__9Qs1Z\",\"passwordContainer\":\"login_passwordContainer__3C1re\",\"rememberMeContainer\":\"login_rememberMeContainer__2H6cG\",\"spanDiv\":\"login_spanDiv__1T6cl\",\"loginSpan\":\"login_loginSpan__2WeRs\",\"buttonContainer\":\"login_buttonContainer__1VFh7\",\"loadingStatus\":\"login_loadingStatus__jmXPr\",\"failedStatus\":\"login_failedStatus__3ebY0\",\"buttonLogin\":\"login_buttonLogin__1UrB0\",\"errorCheckStyle\":\"login_errorCheckStyle__3LB_X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainSignupContainer\":\"signup_mainSignupContainer__3nRwz\",\"signupForm\":\"signup_signupForm__2vqMS\",\"signupContainer\":\"signup_signupContainer__3bgZK\",\"emailContainer\":\"signup_emailContainer__gc2cC\",\"passwordContainer\":\"signup_passwordContainer__201wf\",\"emailInput\":\"signup_emailInput__kD3sG\",\"passwordInput\":\"signup_passwordInput__WpWms\",\"spanDiv\":\"signup_spanDiv__1d7tB\",\"signupSpan\":\"signup_signupSpan__2L6S8\",\"nameInput\":\"signup_nameInput__3kU1C\",\"surnameInput\":\"signup_surnameInput__201dW\",\"nameInputs\":\"signup_nameInputs__1dnGG\",\"firstNameContainer\":\"signup_firstNameContainer__27kzg\",\"secondNameContainer\":\"signup_secondNameContainer__36Lb2\",\"buttonContainer\":\"signup_buttonContainer__3O9iO\",\"buttonSignup\":\"signup_buttonSignup__3Vbom\",\"errorCheckStyle\":\"signup_errorCheckStyle__2n7Jt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainDivTest\":\"superInput_mainDivTest__-fU4J\",\"superInput\":\"superInput_superInput__1lAzC\",\"errorInput\":\"superInput_errorInput__3yxDK\",\"error\":\"superInput_error__3TQxO\",\"checkbox\":\"superInput_checkbox__2aX1I\",\"checkboxStyle\":\"superInput_checkboxStyle__3U3yE\",\"default\":\"superInput_default__1vHFr\",\"red\":\"superInput_red__3XSHw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"forgotPassword_mainContainer__3nYOT\",\"recoverForm\":\"forgotPassword_recoverForm__10KO6\",\"dataContainer\":\"forgotPassword_dataContainer__1Oy6L\",\"recoverInput\":\"forgotPassword_recoverInput__1vQ4X\",\"recoverPasswordContainer\":\"forgotPassword_recoverPasswordContainer__3eXoj\",\"recoverSpan\":\"forgotPassword_recoverSpan__1F1fe\",\"enterEmailSpan\":\"forgotPassword_enterEmailSpan__f0pvr\",\"buttonContainer\":\"forgotPassword_buttonContainer__2GGB3\",\"buttonReset\":\"forgotPassword_buttonReset__1S5s-\",\"errorCheckStyle\":\"forgotPassword_errorCheckStyle__1LIaI\",\"loadingText\":\"forgotPassword_loadingText__3Uh08\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"resetPassword_mainContainer__2SdOP\",\"resetForm\":\"resetPassword_resetForm__8FN92\",\"dataContainer\":\"resetPassword_dataContainer__Fc64z\",\"newPasswordInput\":\"resetPassword_newPasswordInput__2Ecdl\",\"confirmPasswordInput\":\"resetPassword_confirmPasswordInput__3FirR\",\"newPasswordContainer\":\"resetPassword_newPasswordContainer__3EYNR\",\"confirmPasswordContainer\":\"resetPassword_confirmPasswordContainer__2bfZi\",\"resetSpan\":\"resetPassword_resetSpan__gf0zL\",\"buttonContainer\":\"resetPassword_buttonContainer__1T8sM\",\"buttonReset\":\"resetPassword_buttonReset__25oxW\",\"errorCheckStyle\":\"resetPassword_errorCheckStyle__1Xpt2\",\"requestMessage\":\"resetPassword_requestMessage__O9N3Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"packsMainDiv\":\"Packs_packsMainDiv__2gPzP\",\"packsCheckbox\":\"Packs_packsCheckbox__3SI1O\",\"packsTitle\":\"Packs_packsTitle__1mnq5\",\"packsAddButton\":\"Packs_packsAddButton__1TvNM\",\"searchButton\":\"Packs_searchButton__FJtkV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainDiv\":\"header_mainDiv__3_Stn\",\"linksContainer\":\"header_linksContainer__2yqN-\",\"login\":\"header_login__YsxWo\",\"signup\":\"header_signup__3pOhg\",\"logoutButton\":\"header_logoutButton__3z_vm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"notFoundPage_container__3HphT\",\"getLostSpan\":\"notFoundPage_getLostSpan__1MyZx\",\"mainDiv\":\"notFoundPage_mainDiv__1zoVL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainDiv\":\"navlink_mainDiv__3vrzX\"};"],"sourceRoot":""}